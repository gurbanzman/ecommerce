import type { Metadata } from "next";
import { DM_Sans } from "next/font/google";
import "../globals.css";
import Navbar from "./navbar";
import Footer from "./footer";
import SearchFilters from "./search-filters";
import configPromise from "@payload-config";
import { getPayload } from "payload";
import { Category } from "@/payload-types";

const dmSans = DM_Sans({
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const payload = await getPayload({
    config: configPromise,
  });
  const data = await payload.find({
    collection: "categories",
    depth: 1, // Populate subcategories, subcategories.[0] will be a type of "Category"
    pagination: false,
    where: {
      parent: {
        exists: false,
      },
    },
  });
  const formattedData = data.docs.map((doc) => ({
    ...doc,
    subcategories: (doc.subcategories?.docs ?? []).map((doc) => ({
      // Because of "depth: 1" we are confident "doc" will be a type of "Category"
      ...(doc as Category),
      subcategories: undefined,
    }))
  }))
  
  return (
    <html lang="en">
      <body className={`${dmSans.className} antialiased`}>
        <div className="flex flex-col min-h-screen">
          <Navbar />
          <SearchFilters data={formattedData}/>
          <main className="flex-1 bg-[#f4f4f4]">{children}</main>
          <Footer />
        </div>
      </body>
    </html>
  );
}
